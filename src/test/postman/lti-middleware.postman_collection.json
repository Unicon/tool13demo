{
	"info": {
		"_postman_id": "dab68df5-0e8e-4588-87cc-929f9918a82e",
		"name": "lti-middleware",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET Config",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Has status 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{auth_password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{middleware_url}}/config/",
					"host": [
						"{{middleware_url}}"
					],
					"path": [
						"config",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "POST (Create) Config",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let id = pm.response.json().keyId;",
							"pm.environment.set(\"id\", id);",
							"",
							"pm.test(\"Has status 201\", () => {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response body has correct json schema\", () => {",
							"    const configSchema = JSON.parse(pm.environment.get('config_schema'));",
							"    pm.response.to.have.jsonSchema(configSchema);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let body = JSON.parse(pm.environment.get('config_create_body'));",
							"let deploymentId = (Math.random() + 1).toString(36).substring(2);",
							"body.deploymentId = deploymentId;",
							"pm.environment.set('config_create_body', JSON.stringify(body));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{auth_password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{config_create_body}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{middleware_url}}/config/",
					"host": [
						"{{middleware_url}}"
					],
					"path": [
						"config",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT (Update) Config",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let body = JSON.parse(pm.environment.get('config_update_body'));",
							"let deploymentId = (Math.random() + 1).toString(36).substring(2);",
							"body.deploymentId = deploymentId;",
							"pm.environment.set('config_update_body', JSON.stringify(body));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Has status 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response body has correct json schema\", () => {",
							"    const configSchema = JSON.parse(pm.environment.get('config_schema'));",
							"    pm.response.to.have.jsonSchema(configSchema);",
							"});",
							"",
							"pm.test(\"Validate update took place\", () => {",
							"    const responseDeploymentId = pm.response.json().deploymentId;",
							"    const updateBodyDeploymentId = JSON.parse(pm.environment.get('config_update_body')).deploymentId;",
							"    pm.expect(responseDeploymentId).to.eql(updateBodyDeploymentId);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{auth_password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{config_update_body}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{middleware_url}}/config/{{id}}",
					"host": [
						"{{middleware_url}}"
					],
					"path": [
						"config",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Config by Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Has status 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response body has correct json schema\", () => {",
							"    const configSchema = JSON.parse(pm.environment.get('config_schema'));",
							"    pm.response.to.have.jsonSchema(configSchema);",
							"});",
							"",
							"pm.test(\"Validate correct platform deployment config returned\", () => {",
							"    const responseKeyId = pm.response.json().keyId;",
							"    const keyId = pm.environment.get('id');",
							"    pm.expect(responseKeyId).to.eql(keyId);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{auth_password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{middleware_url}}/config/{{id}}",
					"host": [
						"{{middleware_url}}"
					],
					"path": [
						"config",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}